openapi: '3.0.3'
info:
  title: OpenMind Core API
  version: '1.0'
servers:
  - url: https://api.openmind.org/api/core
    description: OpenMind Core API
paths:
  /{provider}/chat/completions:
    post:
      summary: Get completions for a chat message
      description: Get completions for a chat message
      parameters:
        - name: provider
          in: path
          required: true
          description: The provider of the LLM (openai, deepseek, gemini)
          schema:
            type: string
            enum:
              - openai
              - deepseek
              - gemini
              - xai
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                  enum: [gpt-4o, gpt-4o-mini, "deepseek-chat", "gemini-2.0-flash-exp", "grok-2-latest"]
                  description: The model to use for completion.
                messages:
                  type: array
                  items:
                    type: object
                    properties:
                      role:
                        type: string
                        enum: [system, user, assistant]
                        description: The role of the message sender.
                      content:
                        type: string
                        description: The text content of the message.
                  minItems: 1  # Ensures at least one message is sent
              required:
                - model
                - messages
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  choices:
                    type: array
                    description: A list of generated response choices.
                    items:
                      type: object
                      properties:
                        finish_reason:
                          type: string
                          description: The reason why the response generation stopped.
                          example: "stop"
                        index:
                          type: integer
                          description: The index of the response in the choices array.
                          example: 0
                        logprobs:
                          type: object
                          nullable: true
                          description: Log probabilities of tokens, if enabled.
                          example: null
                        message:
                          type: object
                          description: The generated message content.
                          properties:
                            annotations:
                              type: array
                              description: Additional annotations for the message.
                              items:
                                type: object
                              example: []
                            content:
                              type: string
                              description: The response text generated by the model.
                              example: "Hello! How can I assist you today?"
                            refusal:
                              type: string
                              nullable: true
                              description: Reason for refusal if the response was blocked.
                              example: null
                            role:
                              type: string
                              enum: [assistant]
                              description: The role of the message sender.
                              example: "assistant"
                  created:
                    type: integer
                    description: The Unix timestamp of response creation.
                    example: 1742147458
                  id:
                    type: string
                    description: The unique identifier of the completion request.
                    example: "chatcmpl"
                  model:
                    type: string
                    description: The model used for completion.
                    example: "gpt-4o-2024-08-06"
                  object:
                    type: string
                    description: The object type of the response.
                    example: "chat.completion"
                  service_tier:
                    type: string
                    description: The service tier used for the request.
                    example: "default"
                  system_fingerprint:
                    type: string
                    description: A fingerprint identifier for system consistency.
                    example: "fingerprint"
                  usage:
                    type: object
                    description: Token usage details.
                    properties:
                      completion_tokens:
                        type: integer
                        description: Number of tokens generated in the response.
                        example: 10
                      completion_tokens_details:
                        type: object
                        description: Breakdown of completion tokens.
                        properties:
                          accepted_prediction_tokens:
                            type: integer
                            description: Tokens accepted by the model.
                            example: 0
                          audio_tokens:
                            type: integer
                            description: Tokens used for audio processing.
                            example: 0
                          reasoning_tokens:
                            type: integer
                            description: Tokens used for reasoning tasks.
                            example: 0
                          rejected_prediction_tokens:
                            type: integer
                            description: Tokens rejected by the model.
                            example: 0
                      prompt_tokens:
                        type: integer
                        description: Number of tokens in the input prompt.
                        example: 8
                      prompt_tokens_details:
                        type: object
                        description: Breakdown of prompt tokens.
                        properties:
                          audio_tokens:
                            type: integer
                            description: Tokens used for audio input.
                            example: 0
                          cached_tokens:
                            type: integer
                            description: Cached tokens reused from previous requests.
                            example: 0
                      total_tokens:
                        type: integer
                        description: Total number of tokens used in the request.
                        example: 18
                required:
                  - choices
                  - created
                  - id
                  - model
                  - object
                  - usage
        '500':
          description: Internal server error.
        '503':
          description: Failed to forward the request to the provider.
      security:
        - apiKeyAuth: []
        - bearerAuth: []

  /elevenlabs/tts:
    post:
      summary: Get a text-to-speech audio data (Eleven Labs model)
      description: Get a text-to-speech audio data (Eleven Labs model)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: The text to convert to speech.
                voice_id:
                  type: string
                  description: The voice ID to use for the speech.
                model_id:
                  type: string
                  description: The model ID to use for the speech.
                output_format:
                  type: string
                  description: The output format of the audio data.
              required:
                - text
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    format: byte
                    description: The base64 encoded audio data.
        '400':
          description: Invalid JSON input.
        '500':
          description: Internal server error.
        '503':
          description: Failed to forward the request to the provider.
      security:
        - apiKeyAuth: []
        - bearerAuth: []

  /riva/tts:
    post:
      summary: Get a text-to-speech audio data (Riva model)
      description: Get a text-to-speech audio data (Riva model)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: The text to convert to speech.
              required:
                - text
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    format: byte
                    description: The base64 encoded audio data.
        '400':
          description: Invalid JSON input.
        '500':
          description: Internal server error.
        '503':
          description: Failed to forward the request to the provider.
      security:
        - apiKeyAuth: []
        - bearerAuth: []

components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT